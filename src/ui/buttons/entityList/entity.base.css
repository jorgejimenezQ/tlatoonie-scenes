/* ===== Entity Editor (template styles) ===== */

/* Light/Dark palette */
:root {
    --bg: #ffffff;
    --panel: #f6f7fb;
    --card: #ffffff;
    --text: #16191e;
    --input-text: #1c1f24;
    --muted: #6b7280;
    --border: #e5e7eb;
    --accent: #3b82f6;
    --accent-contrast: #ffffff;
    --shadow: 0 1px 2px rgba(0, 0, 0, 0.06), 0 4px 12px rgba(0, 0, 0, 0.06);
    --input-bg: #eff2f6;
    --red: #ef4444;
    --blue: #3b82f6;
    --green: #16a34a;
    --yellow: #f59e0b;
}

@media (prefers-color-scheme: dark) {
    :root {
        --bg: #0f1115;
        --panel: #151922;
        --card: #0f141b;
        --text: #e5e7eb;
        --input-text: #1c1f24;
        --muted: #9aa3b2;
        --border: #1f2530;
        --accent: #60a5fa;
        --accent-contrast: #0b1020;
        --shadow: 0 1px 2px rgba(0, 0, 0, 0.5), 0 6px 18px rgba(0, 0, 0, 0.35);
    }
}

/* Card (the <li> root in the template) */
.entity-card {
    list-style: none;
    background: var(--card);
    color: var(--text);
    border: 1px solid var(--border);
    border-radius: 12px;
    box-shadow: var(--shadow);
    padding: 14px;
    margin: 10px 0;
}

/* Header */
.entity-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 12px;
    gap: 12px;
}

.entity-header strong {
    font-size: 14px;
    font-weight: 700;
    display: inline-flex;
    gap: 8px;
}

.entity-header small {
    color: var(--muted);
    font-size: 12px;
}

.entity-header input[type='checkbox'] {
    vertical-align: middle;
    accent-color: var(--accent);
}

/* Component sections */
.component {
    border: 1px solid var(--border);
    border-radius: 10px;
    padding: 12px;
    background: var(--panel);
    margin: 10px 0 0;
}

.component h4 {
    margin: 0 0 10px;
    font-size: 13px;
    letter-spacing: 0.02em;
}

/* Forms */
.component-form {
    display: grid;
    gap: 10px;
}

/* Row = responsive field group */
.row {
    display: grid;
    grid-template-columns: repeat(4, minmax(100px, 1fr));
    gap: 10px;
}

@media (max-width: 520px) {
    .row {
        grid-template-columns: 1fr;
    }
}

/* Labels & inputs */
.input-container {
    /* 
    the label and input wrapper should be side-by-side
    */
    display: grid;
    gap: 6px;
    grid-template-columns: auto 1fr;
}
/*  colors  */

.text-red {
    color: var(--red);
}

.text-green {
    color: rgb(99, 255, 99);
}

.text-blue {
    color: rgb(99, 99, 255);
}

.icon-large {
    font-size: large;
}

.text-yellow {
    color: rgb(255, 255, 99);
    font-size: large;
}

label {
    display: grid;
    gap: 6px;
    font-size: 12px;
    color: var(--muted);
}

/* input.hidden {
    display: none;
} */
.value-hidden {
    display: none;
}
input[type='number'],
input[type='text'] {
    max-width: 60px;
    max-height: 32px;
    box-sizing: border-box;
    border: 1px solid var(--accent);
    border-radius: 4px;
    background: var(--input-bg);
    color: var(--input-text);
    outline: none;
    transition: border-color 0.15s ease, box-shadow 0.15s ease;
}

input[type='number']:focus,
input[type='text']:focus {
    border-color: var(--accent);
    box-shadow: 0 0 0 3px color-mix(in oklab, var(--accent) 25%, transparent);
}

/* Checkboxes in rows */
.row .checkbox,
label.checkbox {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    color: var(--muted);
}

input[type='checkbox'] {
    accent-color: var(--accent);
}

/* Actions */
.actions {
    display: flex;
    gap: 8px;
    justify-content: flex-end;
    margin-top: 6px;
}

.actions button {
    appearance: none;
    border: 1px solid var(--border);
    background: var(--card);
    color: var(--text);
    padding: 8px 12px;
    border-radius: 8px;
    font-size: 12px;
    cursor: pointer;
    transition: border-color 0.15s ease, transform 0.05s ease;
}

.actions button[data-action='delete-component'] {
    border: none;
}

.actions button[data-action='refresh-component'] {
    background-color: var(--green);
    color: var(--accent-contrast);
}

.actions button:hover {
    border-color: var(--accent);
}

.actions button[data-action='save-component'] {
    background: var(--accent);
    color: var(--accent-contrast);
    border-color: var(--accent);
}

.actions button:active {
    transform: translateY(1px);
}

/* Utility: tighten vertical rhythm between components */
.component + .component {
    margin-top: 12px;
}
